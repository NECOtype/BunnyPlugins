---
import Layout from '@layouts/Base.astro';
import FontPage from '@layouts/FontPage.astro';

import { getCollection, render } from 'astro:content';
import { sluggit, asksForJson } from '@lib/utils';

import fs from 'node:fs/promises';
import path from 'node:path';

export const prerender = false;

const { slug } = Astro.params;
const fonts = await getCollection("font");
const font = fonts.find(f => (f.data.slug || sluggit(f.data.title)) === (Array.isArray(slug) ? slug.join('/') : slug))
if (!font) { throw new Error(`Font not found for id: ${slug}`); }

if (asksForJson(Astro.request)) {
	const id = font.data.slug || sluggit(font.data.title);
	const manifestPath = path.resolve("src/content/fonts", id, `${id}.json`)

	try {
		const json = await fs.readFile(manifestPath, "utf-8");
		return new Response(json, {
			status: 200,
			headers: {
				"Content-Type": "application/json",
			}
		});
	} catch (err) {
		return new Response(
			JSON.stringify({ error: 'Font manifest not found'}),
			{ status: 400, headers: { 'Content-Type': 'application/json' }}
		);
	}
}

const { Content } = await render(font);
---

<Layout title=`Fonts - ${font.data.title}`>
	<FontPage {...font.data}>
		<Content />
	</FontPage>
</Layout>

<style>
</style>